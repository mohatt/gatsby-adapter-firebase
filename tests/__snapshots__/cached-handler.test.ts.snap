// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`createCachedHandler() > caches 404 responses > cache 1`] = `
Map {
  ".gatsby-adapter-firebase/not-found/L21pc3Npbmc.bin" => {
    "file": {
      "body": "missing",
      "header": {
        "headers": [
          {
            "name": "cache-control",
            "value": "public, max-age=0, must-revalidate",
          },
          {
            "name": "content-length",
            "value": 7,
          },
        ],
        "status": 404,
        "version": "test-version",
      },
    },
    "metadata": {
      "contentType": "application/octet-stream",
      "metadata": {
        "headerLength": 158,
      },
    },
  },
}
`;

exports[`createCachedHandler() > caches 404 responses > response[hit] 1`] = `
{
  "body": {},
  "headers": {
    "cache-control": "public, max-age=0, must-revalidate",
    "connection": "close",
    "content-length": "7",
    "date": "<any>",
    "x-gatsby-firebase-cache": "HIT",
  },
  "status": 404,
  "text": "missing",
  "type": "",
}
`;

exports[`createCachedHandler() > caches 404 responses > response[miss] 1`] = `
{
  "body": {},
  "headers": {
    "cache-control": "public, max-age=0, must-revalidate",
    "connection": "close",
    "content-length": "7",
    "date": "<any>",
    "x-gatsby-firebase-cache": "MISS",
  },
  "status": 404,
  "text": "missing",
  "type": "",
}
`;

exports[`createCachedHandler() > does not cache non-cacheable status codes > cache 1`] = `Map {}`;

exports[`createCachedHandler() > does not cache non-cacheable status codes > response[miss] 1`] = `
{
  "body": {},
  "headers": {
    "cache-control": "no-store",
    "connection": "close",
    "content-length": "5",
    "date": "<any>",
    "x-gatsby-firebase-cache": "MISS",
  },
  "status": 500,
  "text": "error",
  "type": "",
}
`;

exports[`createCachedHandler() > does not cache non-cacheable status codes > response[repeat] 1`] = `
{
  "body": {},
  "headers": {
    "cache-control": "no-store",
    "connection": "close",
    "content-length": "5",
    "date": "<any>",
    "x-gatsby-firebase-cache": "MISS",
  },
  "status": 500,
  "text": "error",
  "type": "",
}
`;

exports[`createCachedHandler() > handles write errors correctly > cache 1`] = `Map {}`;

exports[`createCachedHandler() > handles write errors correctly > response[miss] 1`] = `
{
  "body": {},
  "headers": {
    "cache-control": "public, max-age=0, must-revalidate",
    "connection": "close",
    "date": "<any>",
    "transfer-encoding": "chunked",
    "x-gatsby-firebase-cache": "MISS",
  },
  "status": 200,
  "text": "1-3",
  "type": "",
}
`;

exports[`createCachedHandler() > handles write errors correctly > response[repeat] 1`] = `
{
  "body": {},
  "headers": {
    "cache-control": "public, max-age=0, must-revalidate",
    "connection": "close",
    "date": "<any>",
    "transfer-encoding": "chunked",
    "x-gatsby-firebase-cache": "MISS",
  },
  "status": 200,
  "text": "1-3",
  "type": "",
}
`;

exports[`createCachedHandler() > serves cached GET bodies to HEAD requests > cache 1`] = `
Map {
  ".gatsby-adapter-firebase/head/L2hlYWQ.bin" => {
    "file": {
      "body": "payload",
      "header": {
        "headers": [
          {
            "name": "cache-control",
            "value": "public, max-age=0, must-revalidate",
          },
          {
            "name": "content-length",
            "value": 7,
          },
        ],
        "status": 200,
        "version": "test-version",
      },
    },
    "metadata": {
      "contentType": "application/octet-stream",
      "metadata": {
        "headerLength": 158,
      },
    },
  },
}
`;

exports[`createCachedHandler() > serves cached GET bodies to HEAD requests > response[get] 1`] = `
{
  "body": {},
  "headers": {
    "cache-control": "public, max-age=0, must-revalidate",
    "connection": "close",
    "content-length": "7",
    "date": "<any>",
    "x-gatsby-firebase-cache": "MISS",
  },
  "status": 200,
  "text": "payload",
  "type": "",
}
`;

exports[`createCachedHandler() > serves cached GET bodies to HEAD requests > response[head] 1`] = `
{
  "body": {},
  "headers": {
    "cache-control": "public, max-age=0, must-revalidate",
    "connection": "close",
    "content-length": "7",
    "date": "<any>",
    "x-gatsby-firebase-cache": "HIT",
  },
  "status": 200,
  "text": undefined,
  "type": "",
}
`;

exports[`createCachedHandler() > serves streaming responses correctly > cache 1`] = `
Map {
  ".gatsby-adapter-firebase/function-id/L2hlbGxv.bin" => {
    "file": {
      "body": "hello, world",
      "header": {
        "headers": [
          {
            "name": "cache-control",
            "value": "public, max-age=0, must-revalidate",
          },
          {
            "name": "content-length",
            "value": 12,
          },
          {
            "name": "test-header",
            "value": "test-value",
          },
        ],
        "status": 200,
        "version": "test-version",
      },
    },
    "metadata": {
      "contentType": "application/octet-stream",
      "metadata": {
        "headerLength": 203,
      },
    },
  },
}
`;

exports[`createCachedHandler() > serves streaming responses correctly > response[hit] 1`] = `
{
  "body": {},
  "headers": {
    "cache-control": "public, max-age=0, must-revalidate",
    "connection": "close",
    "content-length": "12",
    "date": "<any>",
    "test-header": "test-value",
    "x-gatsby-firebase-cache": "HIT",
  },
  "status": 200,
  "text": "hello, world",
  "type": "",
}
`;

exports[`createCachedHandler() > serves streaming responses correctly > response[miss] 1`] = `
{
  "body": {},
  "headers": {
    "cache-control": "public, max-age=0, must-revalidate",
    "connection": "close",
    "date": "<any>",
    "test-header": "test-value",
    "transfer-encoding": "chunked",
    "x-gatsby-firebase-cache": "MISS",
  },
  "status": 200,
  "text": "hello, world",
  "type": "",
}
`;

exports[`createCachedHandler() > skips stale cache entries > cache 1`] = `
Map {
  ".gatsby-adapter-firebase/version-check/L2ZyZXNo.bin" => {
    "file": {
      "body": "fresh-response",
      "header": {
        "headers": [
          {
            "name": "cache-control",
            "value": "public, max-age=0, must-revalidate",
          },
          {
            "name": "content-length",
            "value": 14,
          },
          {
            "name": "test-header",
            "value": "fresh-value",
          },
        ],
        "status": 200,
        "version": "test-version",
      },
    },
    "metadata": {
      "contentType": "application/octet-stream",
      "metadata": {
        "headerLength": 204,
      },
    },
  },
}
`;

exports[`createCachedHandler() > skips stale cache entries > response[hit] 1`] = `
{
  "body": {},
  "headers": {
    "cache-control": "public, max-age=0, must-revalidate",
    "connection": "close",
    "content-length": "14",
    "date": "<any>",
    "test-header": "fresh-value",
    "x-gatsby-firebase-cache": "HIT",
  },
  "status": 200,
  "text": "fresh-response",
  "type": "",
}
`;

exports[`createCachedHandler() > skips stale cache entries > response[miss] 1`] = `
{
  "body": {},
  "headers": {
    "cache-control": "public, max-age=0, must-revalidate",
    "connection": "close",
    "content-length": "14",
    "date": "<any>",
    "test-header": "fresh-value",
    "x-gatsby-firebase-cache": "MISS",
  },
  "status": 200,
  "text": "fresh-response",
  "type": "",
}
`;
